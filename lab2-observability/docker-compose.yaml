services:
  # jaeger-all-in-one:
  #   image: jaegertracing/all-in-one:latest
  #   restart: always
  #   ports:
  #     - '16686:16686'
  #     - '14268:14268'
  #     - '14250:14250'

  zipkin:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - '9411:9411'

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - '9090:9090'

  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ['--config', '/etc/otel/collector/config.yaml']
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel/collector/config.yaml
    ports:
      - '8889:8889' # prometheus metrics exposed by the collector
      - '8888:8888' # prometheus exporter metrics
      - '4317:4317' # OTLP gRPC receiver
    depends_on:
      - zipkin

  # Serviço service-a padrão (produção)
  service-a:
    profiles: ['prod']
    image: service-a:prod
    build:
      context: ./service-a
      dockerfile: Dockerfile
    environment:
      - SERVICE_NAME=service-a
      - EXTERNAL_API_BASE_URL=http://service-b:8181
      - API_TIMEOUT_SECONDS=10
      - REQUEST_NAME_OTEL=service-a-request
      - OTEL_COLLECTOR_URL=otel-collector:4317
      - PORT=8080
    ports:
      - '8080:8080'
    depends_on:
      - otel-collector

  # Serviço service-a versão desenvolvimento
  service-a-dev:
    profiles: ['dev']
    image: service-a:dev
    build:
      context: ./service-a
      dockerfile: dockerfile.dev
    environment:
      - SERVICE_NAME=service-a
      - EXTERNAL_API_BASE_URL=http://service-b-dev:8181
      - API_TIMEOUT_SECONDS=10
      - REQUEST_NAME_OTEL=service-a-request
      - OTEL_COLLECTOR_URL=otel-collector:4317
      - PORT=8080
    ports:
      - '8080:8080'
    volumes:
      - ./service-a:/app
    depends_on:
      - otel-collector
    stdin_open: true
    tty: true

  service-b:
    profiles: ['prod']
    image: service-b:prod
    build:
      context: ./service-b
      dockerfile: Dockerfile
    env_file:
      - ./service-b/.env
    environment:
      - SERVICE_NAME=service-b
      - VIACEP_API_BASE_URL=https://viacep.com.br/ws
      - WEATHER_API_BASE_URL=https://api.weatherapi.com/v1
      - API_TIMEOUT_SECONDS=10
      - REQUEST_NAME_OTEL=service-b-request
      - OTEL_COLLECTOR_URL=otel-collector:4317
      - PORT=8181
    # ports:
    #   - '8181:8181'
    depends_on:
      - otel-collector

  # Serviço service-b versão desenvolvimento
  service-b-dev:
    profiles: ['dev']
    image: service-b:dev
    build:
      context: ./service-b
      dockerfile: dockerfile.dev
    env_file:
      - ./service-b/.env
    environment:
      - SERVICE_NAME=service-b
      - VIACEP_API_BASE_URL=https://viacep.com.br/ws
      - WEATHER_API_BASE_URL=https://api.weatherapi.com/v1
      - API_TIMEOUT_SECONDS=10
      - REQUEST_NAME_OTEL=service-b-request
      - OTEL_COLLECTOR_URL=otel-collector:4317
      - PORT=8181
      - OTEL_LOG_LEVEL=debug
    ports:
      - '8181:8181'
    volumes:
      - ./service-b:/app
    depends_on:
      - otel-collector
    stdin_open: true
    tty: true
