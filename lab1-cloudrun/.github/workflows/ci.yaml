name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: temperature-api

jobs:
  test:
    name: Testes e Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Verificar formatação
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Os seguintes arquivos precisam ser formatados:"
            gofmt -l .
            exit 1
          fi

      - name: Executar testes
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          VIACEP_API_BASE_URL: 'https://viacep.com.br/ws'
          WEATHER_API_BASE_URL: 'http://api.weatherapi.com/v1'
          API_TIMEOUT_SECONDS: '30'

      - name: Upload cobertura de código
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella

  deploy:
    name: Deploy no Cloud Run
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Autenticar no Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Autorizar Docker push
        run: gcloud auth configure-docker

      - name: Build e Push da imagem
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy no Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" \
            --set-env-vars "VIACEP_API_BASE_URL=https://viacep.com.br/ws" \
            --set-env-vars "WEATHER_API_BASE_URL=http://api.weatherapi.com/v1" \
            --set-env-vars "API_TIMEOUT_SECONDS=30"
